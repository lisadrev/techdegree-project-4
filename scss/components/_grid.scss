// **********************************************
// _grid.scss
// styles related to the grid system and
// main container.
// major grid styles have been added here for you
// but additional styling may be needed
// **********************************************

.container {
  width: 85%;
  margin: 2em auto;
}

// grid base class
.grid {

  // .grid__row
  &__row {
    padding: 1em 10px;

    // NOTE: replace with media query mixin if aiming for exceeds
    @media (min-width: 768px) {
      display: flex;
      flex-direction: row;
      flex-wrap: nowrap;
      justify-content: center;
      align-content: center;
    }

  }

  // .grid__col
  &__col {

    // create grid columns dynamically
    // loop through each column size
    @for $i from 1 through 12 {

      // concatenate CSS selector, ie when $i = 1,
      // selector would be .grid__col--1
      &--#{$i}{
        &.theme__colors {
        @extend %btn;
        @extend %padding-left;
        @include text($size: 15px, $weight:$font-weight--bold, $color:$color-text);
        background-color: map-get($grid-colors, #{$i});
        }




        // base styles applied to all grid columns
        // NOTE: could be converted to a placeholder, along with margin
        // from the  media query
        margin-top: 10px;
        flex-basis: 100%;

        // NOTE: replace with media query mixin if aiming for exceeds
        @media (min-width: 768px) {


          // base stlyes applied to all grid columns
          margin-top: 0;

          // make column width a percentage of the column number / total columns
          flex-basis: #{$i / 12 * 100 + "%"} ;

          $context: g-context($g-col-width, $g-col-count, $g-gutter-width);
          $target: ($g-col-width * $i) + ($g-gutter-width * ($i));
          width: percentage($target / $context);
        }
      }
    }
  }
}


// targets all elements with classes that begin with grid__col
    [class^=grid__col] {





    // NOTE: replace with media query mixin if aiming for exceeds
    @media (min-width: 768px) {



        // grid__col + grid__col, targets two sibling columns
        & + & {




      // add grid gutter
      margin-left: 10px;
    }
  }
}

@include mq(wide) {
.grid__row .theme__colors {
  text-align: center;
}
}
